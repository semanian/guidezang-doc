{"html":"<!-- TITLE: Home --><!-- SUBTITLE: A quick summary of Home --><html><head></head><body><h1 id=\"guidezang-server\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#guidezang-server\" aria-hidden=\"true\"></a> Guidezang (Server)</h1>\n<h2 id=\"pre-requisites\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pre-requisites\" aria-hidden=\"true\"></a> Pre-Requisites</h2><div class=\"indent-h2\"><p>Install nodejs</p><pre><code>yum install nodejs\n</code></pre><p>Install pm2</p><pre><code>npm install pm2 -g\n</code></pre><p>Install nginx</p><pre><code>yum install nginx\n</code></pre><p>Install mongo</p><pre><code>yum install mongodb-org\n</code></pre><p>Start mongo service</p><pre><code>systemctl start mongod\n</code></pre></div>\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"nginx-configuration-updates\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#nginx-configuration-updates\" aria-hidden=\"true\"></a> NGINX configuration updates</h1>\n<p>/etc/nginx/nginx.conf</p>\n<pre><code>http {\n    ...\n    client_max_body_size 5M;\n    ...\n\n    # Redirect guidezang.kr to www.guidezang.kr\n    server {\n      server_name guidezang.kr;\n      return 301 $scheme://www.guidezang.kr$request_uri;\n    }\n\n    # Handle www.guidezang.kr\n    server {\n        server_name www.guidezang.kr;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n\n    # Handle app.guidezang.kr\n    server {\n        server_name app.guidezang.kr;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n            proxy_pass http://localhost:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection &apos;upgrade&apos;;\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;\n        }\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n}\n</code></pre>\n<p>Test nginx configuration</p>\n<pre><code>nginx -t\n</code></pre>\n<h2 id=\"ssl\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#ssl\" aria-hidden=\"true\"></a> SSL</h2><div class=\"indent-h2\"><pre><code>yum install certbot-nginx\n</code></pre><pre><code>certbot --nginx -d guidezang.kr -d www.guidezang.kr -d app.guidezang.kr\n</code></pre><pre><code>  Terms of Service: (A)gree\n  Share email with EFF: (Y)es/(N)o\n  Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.: 2 (Redirect)\n\n  You have successfully enabled https://guidezang.kr, https://www.guidezang.kr, and https://app.guidezang.kr\n</code></pre><p>Note: Certbot will modify nginx.conf with the necessary changes.</p><pre><code>sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n</code></pre><p>Add this within <code>server { ... }</code> block in <code>/etc/nginx/nginx.conf</code></p><pre><code>  . . .\n  ssl_dhparam /etc/ssl/certs/dhparam.pem;\n</code></pre></div>\n\n\n\n\n\n\n\n<h2 id=\"renew-certificate-at-3-15-am-8th-every-month\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#renew-certificate-at-3-15-am-8th-every-month\" aria-hidden=\"true\"></a> Renew certificate at 3:15 am, 8th every month</h2><div class=\"indent-h2\"><pre><code>vi /etc/crontab\n</code></pre><p>Add a cron job</p><pre><code>15 3 28 * * /bin/certbot renew --preferred-challenges http\n</code></pre><p>Restart crond service</p><pre><code>service restart crond\n</code></pre></div>\n\n\n\n\n\n<h2 id=\"references\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#references\" aria-hidden=\"true\"></a> References:</h2><div class=\"indent-h2\"><ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-centos-7\" class=\"external-link\">https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-centos-7</a></li>\n<li><a href=\"https://certbot.eff.org/lets-encrypt/centosrhel7-nginx\" class=\"external-link\">https://certbot.eff.org/lets-encrypt/centosrhel7-nginx</a></li>\n</ul></div>\n\n<h1 id=\"nginx\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#nginx\" aria-hidden=\"true\"></a> NGINX</h1>\n<h2 id=\"restart-nginx\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#restart-nginx\" aria-hidden=\"true\"></a> Restart nginx</h2><div class=\"indent-h2\"><pre><code>systemctl restart nginx.service\n</code></pre></div>\n\n<h2 id=\"start-nginx\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#start-nginx\" aria-hidden=\"true\"></a> Start nginx</h2><div class=\"indent-h2\"><pre><code>systemctl start nginx.service\n</code></pre></div>\n\n<h2 id=\"stop-nginx\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#stop-nginx\" aria-hidden=\"true\"></a> Stop nginx</h2><div class=\"indent-h2\"><pre><code>systemctl stop nginx.service\n</code></pre></div>\n\n<h2 id=\"reload-nginx-configuration\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#reload-nginx-configuration\" aria-hidden=\"true\"></a> Reload nginx configuration</h2><div class=\"indent-h2\"><pre><code>systemctl reload nginx.service\n</code></pre><p>If you get <code>NGINX: failed (13: Permission denied) while connecting to upstream</code><br>\nRun <code>setenforce 0</code><br>\nOr edit /etc/selinux/config and change <code>SELINUX=disabled</code></p></div>\n\n\n<h2 id=\"deployment-from-local-computer\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#deployment-from-local-computer\" aria-hidden=\"true\"></a> Deployment (from local computer)</h2><div class=\"indent-h2\"><p>To development server</p><pre><code>npm run deploy:dev\n</code></pre><p>To production server</p><pre><code>npm run deploy:prod\n</code></pre></div>\n\n\n\n\n<h2 id=\"alternatively-server-side-code-from-github\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#alternatively-server-side-code-from-github\" aria-hidden=\"true\"></a> Alternatively: Server side code from github</h2><div class=\"indent-h2\"><pre><code>git clone git@github.com:semanian/guidezang-server.git ~/guidezang\n</code></pre></div>\n\n<h2 id=\"on-the-server-side\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#on-the-server-side\" aria-hidden=\"true\"></a> On the server side</h2><div class=\"indent-h2\"><p>Copy .env.example to .env and configure the variables</p></div>\n\n<h1 id=\"pm-2\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pm-2\" aria-hidden=\"true\"></a> PM2</h1>\n<p>We use pm2 to run guidezang server. In production environment it defaults to localhost:8080<br>\nnginx forwards all requests to <a href=\"http://app.guidezang.com\" class=\"external-link\">app.guidezang.com</a> / <a href=\"http://app.guidezang.kr\" class=\"external-link\">app.guidezang.kr</a> to it.</p>\n<h1 id=\"pm-2-commands-from-the-guidezang-server-root-directory\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#pm-2-commands-from-the-guidezang-server-root-directory\" aria-hidden=\"true\"></a> PM2 commands (from the guidezang server root directory)</h1>\n<p>Start server</p>\n<pre><code>pm2 start server.js\n</code></pre>\n<p>Stop server</p>\n<pre><code>pm2 stop server.js\n</code></pre>\n<p>Restart server</p>\n<pre><code>pm2 restart server.js\n</code></pre>\n<p>View pm2 logs</p>\n<pre><code>pm2 logs\n</code></pre>\n<h1 id=\"create-admin-user\"><a class=\"toc-anchor nc-icon-outline location_bookmark-add internal-link\" href=\"#create-admin-user\" aria-hidden=\"true\"></a> Create admin user</h1>\n<p>Sign up a user</p>\n<p>Currently the user needs to be assigned the role of admin from mongo. (TODO: Create a script to change a user to admin.)</p>\n<pre><code>mongo&gt; use guidezang;\nmongo&gt; db.users.update({ email: &apos;admin@guidezang.com&apos; }, { $set: { isActivated: true, role: &apos;admin&apos; }});\n</code></pre>\n</body></html>","meta":{"title":"Home","subtitle":"A quick summary of Home","path":"home"},"tree":[{"content":"Guidezang (Server)","anchor":"guidezang-server","nodes":[{"content":"Pre-Requisites","anchor":"pre-requisites","nodes":[]}]},{"content":"NGINX configuration updates","anchor":"nginx-configuration-updates","nodes":[{"content":"SSL","anchor":"ssl","nodes":[]},{"content":"Renew certificate at 3:15 am, 8th every month","anchor":"renew-certificate-at-3-15-am-8th-every-month","nodes":[]},{"content":"References:","anchor":"references","nodes":[]}]},{"content":"NGINX","anchor":"nginx","nodes":[{"content":"Restart nginx","anchor":"restart-nginx","nodes":[]},{"content":"Start nginx","anchor":"start-nginx","nodes":[]},{"content":"Stop nginx","anchor":"stop-nginx","nodes":[]},{"content":"Reload nginx configuration","anchor":"reload-nginx-configuration","nodes":[]},{"content":"Deployment (from local computer)","anchor":"deployment-from-local-computer","nodes":[]},{"content":"Alternatively: Server side code from github","anchor":"alternatively-server-side-code-from-github","nodes":[]},{"content":"On the server side","anchor":"on-the-server-side","nodes":[]}]},{"content":"PM2","anchor":"pm-2","nodes":[]},{"content":"PM2 commands (from the guidezang server root directory)","anchor":"pm-2-commands-from-the-guidezang-server-root-directory","nodes":[]},{"content":"Create admin user","anchor":"create-admin-user","nodes":[]}],"parent":false}